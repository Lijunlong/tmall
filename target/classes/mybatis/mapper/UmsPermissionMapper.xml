<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tmall.dao.UmsPermissionMapper">
  <resultMap id="BaseResultMap" type="com.tmall.model.UmsPermission">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="uri" jdbcType="VARCHAR" property="uri" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="creater" jdbcType="VARCHAR" property="creater" />
    <result column="updater" jdbcType="VARCHAR" property="updater" />
  </resultMap>
  <select id="getUmsPermissionListByAdminId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select *
      from ums_permission
        where id in
          (select permission_id
            from ums_role_permission_relation
              where role_id in
                (select role_id
                  from ums_admin_role_relation
                    where admin_id = #{adminId}));
  </select>
  
  <select id="selectUmsPermissionListByRoleId" parameterType="java.lang.Long" resultMap="BaseResultMap">
  	SELECT permission.* FROM ums_permission permission
		WHERE permission.id IN (
			SELECT permission_id FROM ums_role_permission_relation WHERE role_id = #{roleId}
		)
  </select>
  
  <select id="selectUmsPermissionList" parameterType="com.tmall.model.UmsPermission" resultMap="BaseResultMap">
  	SELECT * FROM ums_permission 
  	<where>
  		<if test="name != null">
  			AND name = #{name}
  		</if>
  	</where>
  </select>
  
  <select id="selectUmsPermissionLikeUmsPermission" parameterType="com.tmall.model.UmsPermission" resultMap="BaseResultMap">
  	SELECT * FROM ums_permission 
  	<where>
  		<if test="name != null">
  			AND name LIKE CONCAT ('%',#{name},'%') 
  		</if>
  	</where>
  </select>
  
  <select id="selectUmsPermissionListByPid" parameterType="java.lang.Long" resultMap="BaseResultMap">
  	SELECT * FROM ums_permission WHERE pid = #{pid}
  </select>
  
  <update id="updateUmsPermission" parameterType="com.tmall.model.UmsPermission">
  	UPDATE ums_permission 
  	<trim prefix="SET" suffixOverrides=",">
  		<if test="name != null">
  			name = #{name},
  		</if>
  		<if test="alias != null">
  			alias = #{alias},
  		</if>
  		<if test="name != null">
  			pid = #{pid},
  		</if>
  		<if test="sort != null">
  			sort = #{sort},
  		</if>
  		<if test="updateTime != null">
  			update_time = #{updateTime},
  		</if>
  		<if test="updater != null">
  			updater = #{updater},
  		</if>
  	</trim>
  	WHERE id = #{id}
  </update>
  
  <insert id="insertUmsPermission" parameterType="com.tmall.model.UmsPermission" useGeneratedKeys="true" keyProperty="id">
	INSERT INTO ums_permission (
		pid, alias, name, value, icon, type, uri, sort, create_time, creater
      )
    values (#{pid,jdbcType=BIGINT}, #{alias,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER} ,#{uri,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{creater,jdbcType=VARCHAR}
      );
  </insert>
  
  <delete id="deleteUmsPermissionById" parameterType="java.lang.Long">
  	DELETE FROM ums_permission WHERE id = #{id,jdbcType=BIGINT}
  </delete>
  
</mapper>